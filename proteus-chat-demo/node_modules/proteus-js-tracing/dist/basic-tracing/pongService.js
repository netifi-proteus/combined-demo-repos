'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PongService = undefined;

var _http = require('http');

var _pingPong_pb = require('../proteus/ping-pong_pb');

var _rsocketFlowable = require('rsocket-flowable');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PongService = exports.PongService = function () {
  function PongService() {
    _classCallCheck(this, PongService);
  }

  PongService.prototype.ping = function ping(message, metadata) {
    console.log('Received ping from ' + message.getMessage() + ' - responding');
    var pong = new _pingPong_pb.Pong();
    pong.setMessage('Pong!');
    return _rsocketFlowable.Single.of(pong);
  };

  PongService.prototype.pingFireAndForget = function pingFireAndForget(message, metadata) {
    console.log('Received ping from ' + message.getMessage());
  };

  PongService.prototype.pingStream = function pingStream(message, metadata) {
    var count = 1;
    var responses = [];
    for (var i = 1; i < 6; i++) {
      var pong = new _pingPong_pb.Pong();
      pong.setMessage('Pong ' + count++);
      responses.push(pong);
    }
    console.log('Received ping from ' + message.getMessage() + ' returning flowable of ' + responses);
    return _rsocketFlowable.Flowable.just.apply(_rsocketFlowable.Flowable, responses);
  };

  return PongService;
}();