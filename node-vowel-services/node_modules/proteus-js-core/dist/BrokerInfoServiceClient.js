'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rsocketFlowable = require('rsocket-flowable');

var _broker_info_pb = require('./proteus/broker_info_pb');

var _core_pb = require('./proteus/core_pb');

var _proteusJsFrames = require('proteus-js-frames');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /**
                                                                                                                                                           * Copyright (c) 2017-present, Netifi Inc.
                                                                                                                                                           *
                                                                                                                                                           * Licensed under the Apache License, Version 2.0 (the "License");
                                                                                                                                                           * you may not use this file except in compliance with the License.
                                                                                                                                                           * You may obtain a copy of the License at
                                                                                                                                                           *
                                                                                                                                                           *       http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                           *
                                                                                                                                                           * Unless required by applicable law or agreed to in writing, software
                                                                                                                                                           * distributed under the License is distributed on an "AS IS" BASIS,
                                                                                                                                                           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                                                                                                                           * See the License for the specific language governing permissions and
                                                                                                                                                           * limitations under the License.
                                                                                                                                                           *
                                                                                                                                                           * 
                                                                                                                                                           */

var BrokerInfoServiceClient = function () {
  function BrokerInfoServiceClient(rs, group, destination) {
    _classCallCheck(this, BrokerInfoServiceClient);

    this._rs = rs;
    this._group = group;
    this._destination = destination;
  }

  BrokerInfoServiceClient.prototype.brokers = function brokers(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'Brokers', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Broker.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.groups = function groups(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'Groups', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Group.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.destinations = function destinations(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'Destinations', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Destination.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.destinationsByBrokerAndGroup = function destinationsByBrokerAndGroup(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'DestinationsByBrokerAndGroup', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Destination.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.destinationsByGroup = function destinationsByGroup(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'DestinationsByGroup', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Destination.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.brokersWithGroup = function brokersWithGroup(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'BrokersWithGroup', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Broker.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.brokerWithDestination = function brokerWithDestination(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'BrokerWithDestination', metadata);
    return this._rs.requestResponse({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Broker.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.streamGroupEvents = function streamGroupEvents(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'StreamGroupEvents', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Event.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.streamDestinationEvents = function streamDestinationEvents(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'StreamDestinationEvents', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Event.deserializeBinary(payload.data);
    });
  };

  BrokerInfoServiceClient.prototype.streamBrokerEvents = function streamBrokerEvents(message, metadata) {
    var dataBuf = Buffer.from(message.serializeBinary());
    var metadataBuf = (0, _proteusJsFrames.encodeProteusMetadata)('io.netifi.proteus.broker.info.BrokerInfoService', 'StreamBrokerEvents', metadata);
    return this._rs.requestStream({
      data: dataBuf,
      metadata: metadataBuf
    }).map(function (payload) {
      if (payload.data == null) {
        throw new Error('data is null');
      }
      return _broker_info_pb.Event.deserializeBinary(payload.data);
    });
  };

  return BrokerInfoServiceClient;
}();

exports.default = BrokerInfoServiceClient;